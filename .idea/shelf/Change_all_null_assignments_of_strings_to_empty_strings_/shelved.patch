Index: app/src/main/java/org/tvheadend/tvhclient/model/TimerRecording.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/TimerRecording.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/TimerRecording.java	(revision )
@@ -5,16 +5,16 @@
 
 public class TimerRecording implements Comparable<TimerRecording> {
 
-    public String id;
+    public String id = "";
     public boolean enabled = true;
     public long retention;
     public long daysOfWeek;
     public long priority;
     public long start;  // value is in seconds
     public long stop;   // value is in seconds
-    public String directory;
-    public String title;
-    public String name;
+    public String directory = "";
+    public String title = "";
+    public String name = "";
     public Channel channel;
 
     @Override
\ No newline at end of file
Index: app/src/main/java/org/tvheadend/tvhclient/adapter/TimerRecordingListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/adapter/TimerRecordingListAdapter.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/adapter/TimerRecordingListAdapter.java	(revision )
@@ -113,7 +113,7 @@
         // Get the program and assign all the values
         TimerRecording trec = getItem(position);
         if (trec != null) {
-            if (trec.title != null && trec.title.length() > 0) {
+            if (!trec.title.isEmpty()) {
                 holder.title.setText(trec.title);
             } else {
                 holder.title.setText(trec.name);
\ No newline at end of file
Index: app/src/main/java/org/tvheadend/tvhclient/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/Utils.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/Utils.java	(revision )
@@ -735,13 +735,13 @@
         failed_reason.setVisibility(View.VISIBLE);
 
         // Show the reason why it failed
-        if (rec.error != null && rec.error.equals("File missing")) {
+        if (rec.error.equals("File missing")) {
             failed_reason.setText(failed_reason.getResources().getString(R.string.recording_file_missing));
-        } else if (rec.error != null && rec.error.equals("Aborted by user")) {
+        } else if (rec.error.equals("Aborted by user")) {
             failed_reason.setText(failed_reason.getResources().getString(R.string.recording_canceled));
-        } else if (rec.state != null && rec.state.equals("missed")) {
+        } else if (rec.state.equals("missed")) {
             failed_reason.setText(failed_reason.getResources().getString(R.string.recording_time_missed));
-        } else if (rec.state != null && rec.state.equals("invalid")) {
+        } else if (rec.state.equals("invalid")) {
             failed_reason.setText(failed_reason.getResources().getString(R.string.recording_file_invalid));
         } else {
             failed_reason.setVisibility(View.GONE);
Index: app/src/main/java/org/tvheadend/tvhclient/model/ChannelTag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/ChannelTag.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/ChannelTag.java	(revision )
@@ -5,8 +5,8 @@
 public class ChannelTag {
 
     public long id;
-    public String name;
-    public String icon;
+    public String name = "";
+    public String icon = "";
     public Bitmap iconBitmap;
 
     @Override
Index: app/src/main/java/org/tvheadend/tvhclient/model/SeriesRecording.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/SeriesRecording.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/SeriesRecording.java	(revision )
@@ -4,7 +4,7 @@
 
 public class SeriesRecording implements Comparable<SeriesRecording> {
 
-    public String id;
+    public String id = "";
     public long maxDuration;
     public boolean enabled;
     public long minDuration;
@@ -15,16 +15,16 @@
     public long startExtra;
     public long stopExtra;
     public long dupDetect;
-    public String directory;
-    public String title;
-    public String name;
+    public String directory = "";
+    public String title = "";
+    public String name = "";
     public Channel channel;
 
     public long start;
     public long startWindow;
 
     // Required only when a new timer recording is added
-    public String configName;
+    public String configName = "";
 
     @Override
     public int compareTo(@NonNull SeriesRecording that) {
Index: app/src/main/java/org/tvheadend/tvhclient/model/GenreColorDialogItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/GenreColorDialogItem.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/GenreColorDialogItem.java	(revision )
@@ -9,5 +9,5 @@
  */
 public class GenreColorDialogItem {
     public int color;
-    public String genre;
+    public String genre = "";
 }
Index: app/src/main/java/org/tvheadend/tvhclient/model/SystemTime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/SystemTime.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/SystemTime.java	(revision )
@@ -1,7 +1,7 @@
 package org.tvheadend.tvhclient.model;
 
 public class SystemTime {
-    public String time;
-    public String timezone;
-    public String gmtoffset;
+    public String time = "";
+    public String timezone = "";
+    public String gmtoffset = "";
 }
Index: app/src/main/java/org/tvheadend/tvhclient/model/SourceInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/SourceInfo.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/SourceInfo.java	(revision )
@@ -2,9 +2,9 @@
 
 public class SourceInfo {
 
-    public String adapter;
-    public String mux;
-    public String network;
-    public String provider;
-    public String service;
+    public String adapter = "";
+    public String mux = "";
+    public String network = "";
+    public String provider = "";
+    public String service = "";
 }
Index: app/src/main/java/org/tvheadend/tvhclient/TVHClientApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/TVHClientApplication.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/TVHClientApplication.java	(revision )
@@ -196,7 +196,7 @@
             // Sort the channel tags ny name, but keep the all channels always on top
             Collections.sort(tags, new Comparator<ChannelTag>() {
                 public int compare(ChannelTag x, ChannelTag y) {
-                    if (x != null && y != null && x.name != null && y.name != null) {
+                    if (x != null && y != null && !x.name.isEmpty() && !y.name.isEmpty()) {
                         if (y.name.equals(getString(R.string.all_channels))) {
                             return 1;
                         } else {
@@ -447,7 +447,7 @@
             // Add a notification for scheduled recordings
             SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
             if (prefs.getBoolean("pref_show_notifications", false)
-                    && rec.error == null && rec.state.equals("scheduled")) {
+                    && rec.error.isEmpty() && rec.state.equals("scheduled")) {
                 addNotification(rec.id);
             }
         }
@@ -498,7 +498,7 @@
                 for (Recording rec : recordings) {
                     // Include all recordings that are marked as completed, also
                     // include recordings marked as auto recorded
-                    if (rec.error == null && rec.state.equals("completed")) {
+                    if (rec.error.isEmpty() && rec.state.equals("completed")) {
                         recs.add(rec);
                     }
                 }
@@ -510,7 +510,7 @@
                 for (Recording rec : recordings) {
                     // Include all scheduled recordings in the list, also
                     // include recordings marked as auto recorded
-                    if (rec.error == null
+                    if (rec.error.isEmpty()
                             && (rec.state.equals("scheduled") || rec.state.equals("recording"))) {
                         recs.add(rec);
                     }
@@ -522,7 +522,7 @@
             synchronized (recordings) {
                 for (Recording rec : recordings) {
                     // Include all failed recordings in the list
-                    if ((rec.error != null || (rec.state.equals("missed") || rec.state.equals("invalid")))) {
+                    if ((!rec.error.isEmpty() || (rec.state.equals("missed") || rec.state.equals("invalid")))) {
                         recs.add(rec);
                     }
                 }
@@ -1329,7 +1329,7 @@
      */
     public void addNotifications(final long offset) {
         for (Recording rec : getRecordings()) {
-            if (rec.error == null && rec.state.equals("scheduled")) {
+            if (rec.error.isEmpty() && rec.state.equals("scheduled")) {
                 addNotification(rec.id, offset);
             }
         }
Index: app/src/main/java/org/tvheadend/tvhclient/model/Channel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Channel.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Channel.java	(revision )
@@ -11,9 +11,9 @@
 public class Channel implements Comparable<Channel> {
 
     public long id;
-    public String uuid;
-    public String name;
-    public String icon;
+    public String uuid = "";
+    public String name = "";
+    public String icon = "";
     public int number;
     public int numberMinor;
     public final Set<Program> epg = Collections.synchronizedSortedSet(new TreeSet<Program>());
Index: app/src/main/java/org/tvheadend/tvhclient/model/Recording.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Recording.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Recording.java	(revision )
@@ -10,25 +10,25 @@
 
     public Date start;
     public Date stop;
-    public String title;
-    public String subtitle;
-    public String summary;
-    public String description;
+    public String title = "";
+    public String subtitle = "";
+    public String summary = "";
+    public String description = "";
     public Channel channel;
-    public String state;
-    public String error;
+    public String state = "";
+    public String error = "";
     public long eventId;
-    public String autorecId = null;
-    public String timerecId = null;
+    public String autorecId = "";
+    public String timerecId = "";
     public long startExtra;
     public long stopExtra;
     public long retention;
     public long priority;
     public long contentType;
-    public String comment;
-    public String episode;
+    public String comment = "";
+    public String episode = "";
     public final List<DvrCutpoint> dvrCutPoints = new ArrayList<>();
-    public String subscriptionError;
+    public String subscriptionError = "";
     public long streamErrors;
     public long dataErrors;
     public long dataSize;
Index: app/src/main/java/org/tvheadend/tvhclient/adapter/SearchResultAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/adapter/SearchResultAdapter.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/adapter/SearchResultAdapter.java	(revision )
@@ -133,7 +133,7 @@
                 holder.channel.setText(rec.channel.name);
             }
 
-            if (rec.subtitle != null && rec.subtitle.length() > 0) {
+            if (!rec.subtitle.isEmpty()) {
                 holder.subtitle.setVisibility(View.VISIBLE);
                 holder.subtitle.setText(rec.subtitle);
             } else {
Index: app/src/main/java/org/tvheadend/tvhclient/model/SeriesInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/SeriesInfo.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/SeriesInfo.java	(revision )
@@ -10,10 +10,10 @@
 	public int episodeCount;
 	public int partNumber;
 	public int partCount;
-	public String onScreen;
+	public String onScreen = "";
 
 	public String toString() {
-		if (onScreen != null && onScreen.length() > 0) {
+		if (!onScreen.isEmpty()) {
 			return onScreen;
 		}
 		String s = "";
Index: app/src/main/java/org/tvheadend/tvhclient/model/Profiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Profiles.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Profiles.java	(revision )
@@ -4,13 +4,13 @@
 import java.util.Locale;
 
 public class Profiles {
-    public String uuid;
-    public String name;
-    public String comment;
+    public String uuid = "";
+    public String name = "";
+    public String comment = "";
 
     public static final Comparator<Profiles> ProfilesNameSorter = new Comparator<Profiles>() {
         public int compare(Profiles x, Profiles y) {
-            if (x != null && y != null && x.name != null && y.name != null) {
+            if (x != null && y != null && !x.name.isEmpty() && !y.name.isEmpty()) {
                 return x.name.toLowerCase(Locale.getDefault()).compareTo(
                         y.name.toLowerCase(Locale.getDefault()));
             }
Index: app/src/main/java/org/tvheadend/tvhclient/model/Stream.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Stream.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Stream.java	(revision )
@@ -10,8 +10,8 @@
     public static final String STREAM_TYPE_VP8 = "VP8";
     public static final String STREAM_TYPE_AAC = "AAC";
     public int index;
-    public String type;
-    public String language;
+    public String type = "";
+    public String language = "";
     public int height;
     public int width;
     public int duration;
Index: app/src/main/java/org/tvheadend/tvhclient/model/Program.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Program.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Program.java	(revision )
@@ -10,14 +10,14 @@
     public int contentType;
     public Date start;
     public Date stop;
-    public String title;
-    public String description;
-    public String summary;
+    public String title = "";
+    public String description = "";
+    public String summary = "";
     public SeriesInfo seriesInfo;
     public int starRating;
     public Channel channel;
     public Recording recording;
-    public String image;
+    public String image = "";
 
     public int compareTo(@NonNull Program that) {
         return this.start.compareTo(that.start);
Index: app/src/main/java/org/tvheadend/tvhclient/model/DiscSpace.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/DiscSpace.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/DiscSpace.java	(revision )
@@ -1,6 +1,6 @@
 package org.tvheadend.tvhclient.model;
 
 public class DiscSpace {
-    public String freediskspace;
-    public String totaldiskspace;
+    public String freediskspace = "";
+    public String totaldiskspace = "";
 }
Index: app/src/main/java/org/tvheadend/tvhclient/adapter/RecordingListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/adapter/RecordingListAdapter.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/adapter/RecordingListAdapter.java	(revision )
@@ -127,7 +127,7 @@
                 holder.channel.setText(rec.channel.name);
             }
 
-            if (rec.subtitle != null && rec.subtitle.length() > 0) {
+            if (!rec.subtitle.isEmpty()) {
                 holder.subtitle.setVisibility(View.VISIBLE);
                 holder.subtitle.setText(rec.subtitle);
             } else {
@@ -173,7 +173,7 @@
             // selecting the channel icon if the recording is completed or currently
             // being recorded
             if (holder.icon != null && 
-                    rec.error == null &&
+                    rec.error.isEmpty() &&
                     (rec.state.equals("completed") || rec.isRecording())) {
                 holder.icon.setOnClickListener(new OnClickListener() {
                     @Override
\ No newline at end of file
Index: app/src/main/java/org/tvheadend/tvhclient/htsp/HTSConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/htsp/HTSConnection.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/htsp/HTSConnection.java	(revision )
@@ -86,7 +86,7 @@
             listener.onError(Constants.ACTION_CONNECTION_STATE_NO_NETWORK);
             return;
         }
-        if (hostname == null) {
+        if (hostname.isEmpty()) {
             listener.onError(Constants.ACTION_CONNECTION_STATE_NO_CONNECTION);
             return;
         }
Index: app/src/main/java/org/tvheadend/tvhclient/htsp/HTSService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/htsp/HTSService.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/htsp/HTSService.java	(revision )
@@ -239,10 +239,10 @@
     private void onTagAdd(HTSMessage msg) {
         ChannelTag tag = new ChannelTag();
         tag.id = msg.getLong("tagId");
-        tag.name = msg.getString("tagName", null);
-        tag.icon = msg.getString("tagIcon", null);
+        tag.name = msg.getString("tagName");
+        tag.icon = msg.getString("tagIcon");
         app.addChannelTag(tag);
-        if (tag.icon != null) {
+        if (!tag.icon.isEmpty()) {
             getChannelTagIcon(tag);
         }
     }
@@ -255,8 +255,8 @@
 
         tag.name = msg.getString("tagName", tag.name);
         String icon = msg.getString("tagIcon", tag.icon);
-        if (icon == null) {
-            tag.icon = null;
+        if (icon.isEmpty()) {
+            tag.icon = "";
             tag.iconBitmap = null;
         } else if (!icon.equals(tag.icon)) {
             tag.icon = icon;
@@ -271,14 +271,14 @@
     private void onChannelAdd(HTSMessage msg) {
         final Channel ch = new Channel();
         ch.id = msg.getLong("channelId");
-        ch.name = msg.getString("channelName", null);
+        ch.name = msg.getString("channelName");
         ch.number = msg.getInt("channelNumber", 0);
 
         // The default values will be set in case a server with a htsp API
         // version 12 or lower is used
         ch.numberMinor = msg.getInt("channelNumberMinor", 0);
 
-        ch.icon = msg.getString("channelIcon", null);
+        ch.icon = msg.getString("channelIcon");
         ch.tags = msg.getIntList("tags", ch.tags);
 
         if (ch.number == 0) {
@@ -286,7 +286,7 @@
         }
 
         app.addChannel(ch);
-        if (ch.icon != null) {
+        if (!ch.icon.isEmpty()) {
             getChannelIcon(ch);
         }
         long currEventId = msg.getLong("eventId", 0);
@@ -317,8 +317,8 @@
         String icon = msg.getString("channelIcon", ch.icon);
         ch.tags = msg.getIntList("tags", ch.tags);
 
-        if (icon == null) {
-            ch.icon = null;
+        if (icon.isEmpty()) {
+            ch.icon = "";
             ch.iconBitmap = null;
         } else if (!icon.equals(ch.icon)) {
             ch.icon = icon;
@@ -366,14 +366,14 @@
     private void onDvrEntryAdd(HTSMessage msg) {
         Recording rec = new Recording();
         rec.id = msg.getLong("id");
-        rec.description = msg.getString("description", "");
-        rec.summary = msg.getString("summary", "");
-        rec.error = msg.getString("error", null);
+        rec.description = msg.getString("description");
+        rec.summary = msg.getString("summary");
+        rec.error = msg.getString("error");
         rec.start = msg.getDate("start");
-        rec.state = msg.getString("state", null);
+        rec.state = msg.getString("state");
         rec.stop = msg.getDate("stop");
-        rec.title = msg.getString("title", null);
-        rec.subtitle = msg.getString("subtitle", null);
+        rec.title = msg.getString("title");
+        rec.subtitle = msg.getString("subtitle");
         rec.enabled = msg.getLong("enabled", 1) != 0;
 
         rec.channel = app.getChannel(msg.getLong("channel", 0));
@@ -401,9 +401,9 @@
             rec.timerecId = msg.getString("timerecId");
         }
 
-        rec.episode = msg.getString("episode", null);
-        rec.comment = msg.getString("comment", null);
-        rec.subscriptionError = msg.getString("subscriptionError", null);
+        rec.episode = msg.getString("episode");
+        rec.comment = msg.getString("comment");
+        rec.subscriptionError = msg.getString("subscriptionError");
         rec.streamErrors = msg.getLong("streamErrors", 0);
         rec.dataErrors = msg.getLong("dataErrors", 0);
         rec.dataSize = msg.getLong("dataSize", 0);
@@ -459,9 +459,9 @@
             rec.timerecId = msg.getString("timerecId");
         }
 
-        rec.episode = msg.getString("episode", null);
-        rec.comment = msg.getString("comment", null);
-        rec.subscriptionError = msg.getString("subscriptionError", null);
+        rec.episode = msg.getString("episode");
+        rec.comment = msg.getString("comment");
+        rec.subscriptionError = msg.getString("subscriptionError");
         rec.streamErrors = msg.getLong("streamErrors", 0);
         rec.dataErrors = msg.getLong("dataErrors", 0);
         rec.dataSize = msg.getLong("dataSize", 0);
@@ -489,19 +489,19 @@
 
     private void onTimerRecEntryAdd(HTSMessage msg) {
         TimerRecording rec = new TimerRecording();
-        rec.id = msg.getString("id", "");
+        rec.id = msg.getString("id");
         
         rec.daysOfWeek = msg.getLong("daysOfWeek", 0);
         rec.retention = msg.getLong("retention", 0);
         rec.priority = msg.getLong("priority", 0);
         rec.start = msg.getLong("start", 0);
         rec.stop = msg.getLong("stop", 0);
-        rec.title = msg.getString("title", "");
-        rec.name = msg.getString("name", "");
-        rec.directory = msg.getString("directory", "");
+        rec.title = msg.getString("title");
+        rec.name = msg.getString("name");
+        rec.directory = msg.getString("directory");
         rec.channel = app.getChannel(msg.getLong("channel", 0));
 
-        // The enabled flag was added in HTSP API version 18. The support for
+        // The enabled flag was added in HTSP API version 19. The support for
         // timer recordings are available since version 17.
         if (connection.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_ENABLED) {
             rec.enabled = msg.getLong("enabled", 0) != 0;
@@ -525,7 +525,7 @@
         rec.directory = msg.getString("directory", rec.name);
         rec.channel = app.getChannel(msg.getLong("channel", 0));
 
-        // The enabled flag was added in HTSP API version 18. The support for
+        // The enabled flag was added in HTSP API version 19. The support for
         // timer recordings are available since version 17.
         if (connection.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_ENABLED) {
             rec.enabled = msg.getLong("enabled", 0) != 0;
@@ -569,7 +569,7 @@
             HTSMessage sub = (HTSMessage) obj;
             s.index = sub.getInt("index");
             s.type = sub.getString("type");
-            s.language = sub.getString("language", "");
+            s.language = sub.getString("language");
             s.width = sub.getInt("width", 0);
             s.height = sub.getInt("height", 0);
             s.duration = sub.getInt("duration", 0);
@@ -587,11 +587,11 @@
             Object obj = msg.get("sourceinfo");
             HTSMessage sub = (HTSMessage) obj;
             SourceInfo si = new SourceInfo();
-            si.adapter = sub.getString("adapter", "");
-            si.mux = sub.getString("mux", "");
-            si.network = sub.getString("network", "");
-            si.provider = sub.getString("provider", "");
-            si.service = sub.getString("service", "");
+            si.adapter = sub.getString("adapter");
+            si.mux = sub.getString("mux");
+            si.network = sub.getString("network");
+            si.provider = sub.getString("provider");
+            si.service = sub.getString("service");
             subscription.sourceInfo = si;
 
             app.log(TAG, "onSubscriptionStart, added sourceinfo " + si.adapter);
@@ -603,8 +603,8 @@
         if (s == null) {
             return;
         }
-        String status = msg.getString("status", null);
-        if (s.status == null ? status != null : !s.status.equals(status)) {
+        String status = msg.getString("status");
+        if (!s.status.equals(status)) {
             s.status = status;
             app.updateSubscription(s);
         }
@@ -615,8 +615,8 @@
         if (s == null) {
             return;
         }
-        String status = msg.getString("status", null);
-        if (s.status == null ? status != null : !s.status.equals(status)) {
+        String status = msg.getString("status");
+        if (!s.status.equals(status)) {
             s.status = status;
             app.updateSubscription(s);
         }
@@ -690,15 +690,15 @@
 
     private void onAutorecEntryDelete(HTSMessage msg) {
         String id = msg.getString("id");
-        if (id == null) {
+        if (id.isEmpty()) {
             return;
         }
         // Remove the series recording from the list and also update all
         // recordings by removing the series id
         app.removeSeriesRecording(id);
         for (Recording rec : app.getRecordings()) {
-            if (rec.autorecId != null && rec.autorecId.equals(id)) {
-                rec.autorecId = null;
+            if (!rec.autorecId.isEmpty() && rec.autorecId.equals(id)) {
+                rec.autorecId = "";
             }
         }
     }
@@ -903,12 +903,9 @@
         // reduce memory consumption.
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
         Boolean showIcons = prefs.getBoolean("showIconPref", true);
-        if (!showIcons) {
-            return null; 
-        }
 
-        if (url == null || url.length() == 0) {
+        if (!showIcons || url.isEmpty()) {
-            return null;
+            return null; 
         }
 
         File dir = getCacheDir();
@@ -983,8 +980,8 @@
         Program p = new Program();
         p.id = sub.getLong("eventId", 0);
         p.nextId = sub.getLong("nextEventId", 0);
-        p.description = sub.getString("description", "");
-        p.summary = sub.getString("summary", "");
+        p.description = sub.getString("description");
+        p.summary = sub.getString("summary");
         p.recording = app.getRecording(sub.getLong("dvrId", 0));
         p.contentType = sub.getInt("contentType", -1);
         p.title = sub.getString("title");
@@ -1019,7 +1016,7 @@
         SeriesInfo info = new SeriesInfo();
         info.episodeCount = msg.getInt("episodeCount", 0);
         info.episodeNumber = msg.getInt("episodeNumber", 0);
-        info.onScreen = msg.getString("episodeOnscreen", "");
+        info.onScreen = msg.getString("episodeOnscreen");
         info.partCount = msg.getInt("partCount", 0);
         info.partNumber = msg.getInt("partNumber", 0);
         info.seasonCount = msg.getInt("seasonCount", 0);
@@ -1076,7 +1073,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_removing_recording,
-                                response.getString("error", "")));
+                                response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_removing_recording));
                 }
@@ -1148,13 +1145,13 @@
 
             // Do not add these fields if not supported by the server. Updating
             // these strings was fixed in server version v4.1-111-g807b9c8
-            if (title != null && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_TITLE) {
+            if (!title.isEmpty() && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_TITLE) {
                 request.putField("title", title);
             }
-            if (subtitle != null && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_SUBTITLE) {
+            if (!subtitle.isEmpty() && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_SUBTITLE) {
                 request.putField("subtitle", subtitle);
             }
-            if (description != null && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_DESCRIPTION) {
+            if (!description.isEmpty() && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_DESCRIPTION) {
                 request.putField("description", description);
             }
             if (channelId != 0 && app.getProtocolVersion() >= Constants.MIN_API_VERSION_REC_FIELD_UPDATE_CHANNEL) {
@@ -1169,7 +1166,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_updating_recording,
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_updating_recording));
 
@@ -1198,7 +1195,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_removing_recording,
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_removing_recording));
                 }
@@ -1246,14 +1243,14 @@
         // Enabled flag (Added in version 23)
         request.putField("enabled", enabled);
 
-        if (title != null) {
+        if (!title.isEmpty()) {
             request.putField("title", title);
         }
-        if (description != null) {
+        if (!description.isEmpty()) {
             request.putField("description", description);
         }
 
-        if (configName != null) {
+        if (!configName.isEmpty()) {
             request.putField("configName", configName);
         }
 
@@ -1276,7 +1273,7 @@
 
                 if (!success) {
                     app.showMessage(getString(R.string.error_adding_recording,
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_adding_recording));
                 }
@@ -1322,7 +1319,7 @@
         request.putField("enabled", enabled);
         request.putField("directory", directory);
 
-        if (configName != null) {
+        if (!configName.isEmpty()) {
             request.putField("configName", configName);
         }
 
@@ -1331,7 +1328,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_adding_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_adding_recording));
                 }
@@ -1356,7 +1353,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_removing_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_removing_recording));
                 }
@@ -1400,7 +1397,7 @@
         request.putField("enabled", enabled);
         request.putField("directory", directory);
 
-        if (configName != null) {
+        if (!configName.isEmpty()) {
             request.putField("configName", configName);
         }
 
@@ -1409,7 +1406,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_adding_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_adding_recording));
                 }
@@ -1470,12 +1467,12 @@
         request.putField("channelId", ch.id);
         connection.sendMessage(request, new HTSResponseHandler() {
             public void handleResponse(HTSMessage response) {
-                String path = response.getString("path", null);
-                String ticket = response.getString("ticket", null);
+                String path = response.getString("path");
+                String ticket = response.getString("ticket");
                 String webroot = connection.getWebRoot();
 
                 app.log(TAG, "getTicket webroot '" + webroot + "', path '" + path + "'" + ", ticket '" + ticket + "'");
-                if (path != null && ticket != null) {
+                if (!path.isEmpty() && !ticket.isEmpty()) {
                     app.addTicket(new HttpTicket(webroot + path, ticket));
                 }
             }
@@ -1488,10 +1485,10 @@
         request.putField("dvrId", rec.id);
         connection.sendMessage(request, new HTSResponseHandler() {
             public void handleResponse(HTSMessage response) {
-                String path = response.getString("path", null);
-                String ticket = response.getString("ticket", null);
+                String path = response.getString("path");
+                String ticket = response.getString("ticket");
 
-                if (path != null && ticket != null) {
+                if (!path.isEmpty() && !ticket.isEmpty()) {
                     app.addTicket(new HttpTicket(path, ticket));
                 }
             }
@@ -1504,8 +1501,8 @@
         connection.sendMessage(request, new HTSResponseHandler() {
             public void handleResponse(HTSMessage response) {
                 DiscSpace ds = new DiscSpace();
-                ds.freediskspace = response.getString("freediskspace", null);
-                ds.totaldiskspace = response.getString("totaldiskspace", null);
+                ds.freediskspace = response.getString("freediskspace");
+                ds.totaldiskspace = response.getString("totaldiskspace");
                 app.addDiscSpace(ds);
             }
         });
@@ -1517,9 +1514,9 @@
         connection.sendMessage(request, new HTSResponseHandler() {
             public void handleResponse(HTSMessage response) {
                 SystemTime st = new SystemTime();
-                st.time = response.getString("time", null);
-                st.timezone = response.getString("timezone", null);
-                st.gmtoffset = response.getString("gmtoffset", null);
+                st.time = response.getString("time");
+                st.timezone = response.getString("timezone");
+                st.gmtoffset = response.getString("gmtoffset");
                 app.addSystemTime(st);
             }
         });
@@ -1625,7 +1622,7 @@
         request.putField("directory", directory);
         request.putField("dupDetect", dupDetect);
 
-        if (configName != null) {
+        if (!configName.isEmpty()) {
             request.putField("configName", configName);
         }
 
@@ -1634,7 +1631,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_adding_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_adding_recording));
                 }
@@ -1658,7 +1655,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_removing_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_removing_recording));
                 }
@@ -1737,7 +1734,7 @@
         request.putField("directory", directory);
         request.putField("dupDetect", dupDetect);
 
-        if (configName != null) {
+        if (!configName.isEmpty()) {
             request.putField("configName", configName);
         }
 
@@ -1747,7 +1744,7 @@
                 boolean success = response.getInt("success", 0) == 1;
                 if (!success) {
                     app.showMessage(getString(R.string.error_adding_recording, 
-                            response.getString("error", "")));
+                            response.getString("error")));
                 } else {
                     app.showMessage(getString(R.string.success_adding_recording));
                 }
Index: app/src/main/java/org/tvheadend/tvhclient/adapter/SeriesRecordingListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/adapter/SeriesRecordingListAdapter.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/adapter/SeriesRecordingListAdapter.java	(revision )
@@ -37,7 +37,7 @@
         case Constants.RECORDING_SORT_ASCENDING:
             sort(new Comparator<SeriesRecording>() {
                 public int compare(SeriesRecording x, SeriesRecording y) {
-                    if (x != null && y != null && x.title != null && y.title != null) {
+                    if (x != null && y != null && !x.title.isEmpty() && !y.title.isEmpty()) {
                         return (y.title.compareTo(x.title));
                     }
                     return 0;
@@ -47,7 +47,7 @@
         case Constants.RECORDING_SORT_DESCENDING:
             sort(new Comparator<SeriesRecording>() {
                 public int compare(SeriesRecording x, SeriesRecording y) {
-                    if (x != null && y != null && x.title != null && y.title != null) {
+                    if (x != null && y != null && !x.title.isEmpty() && !y.title.isEmpty()) {
                         return (x.title.compareTo(y.title));
                     }
                     return 0;
@@ -119,7 +119,7 @@
                 }
             }
 
-            if (srec.name != null && srec.name.length() > 0) {
+            if (!srec.name.isEmpty()) {
                 holder.name.setVisibility(View.VISIBLE);
                 holder.name.setText(srec.name);
             } else {
\ No newline at end of file
Index: app/src/main/java/org/tvheadend/tvhclient/model/Subscription.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/tvheadend/tvhclient/model/Subscription.java	(date 1484067430000)
+++ app/src/main/java/org/tvheadend/tvhclient/model/Subscription.java	(revision )
@@ -6,7 +6,7 @@
 public class Subscription {
 
     public long id;
-    public String status;
+    public String status = "";
     public final List<Stream> streams = new ArrayList<>();
 
     public long packetCount;
@@ -16,7 +16,7 @@
     public long droppedIFrames;
     public long droppedPFrames;
     public long graceTimeout;
-    public String feStatus;
+    public String feStatus = "";
     public int feSNR;
     public int feSignal;
     public int feBER;
